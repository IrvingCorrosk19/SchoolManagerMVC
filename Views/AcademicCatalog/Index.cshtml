@model SchoolManager.ViewModels.AcademicCatalogViewModel

@{
    ViewData["Title"] = "Catálogo Académico";
    Layout = "_AdminLayout";
}

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #475569;
        --success-color: #22c55e;
        --warning-color: #f59e0b;
        --danger-color: #ef4444;
        --light-bg: #f8fafc;
        --border-color: #e2e8f0;
    }
    body { background-color: var(--light-bg); }
    .card { border: none; border-radius: 1rem; box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1); margin-bottom: 1.5rem; background: white; }
    .card-header { background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%); color: white; border-bottom: 1px solid var(--border-color); padding: 1.25rem; border-radius: 1rem 1rem 0 0 !important; }
    .card-body { padding: 1.5rem; }
    .form-control, .form-select { border: 1px solid var(--border-color); border-radius: 0.5rem; padding: 0.75rem 1rem; transition: all 0.3s ease; }
    .form-control:focus, .form-select:focus { border-color: var(--primary-color); box-shadow: 0 0 0 3px rgba(37,99,235,0.1); }
    .btn-primary { background: linear-gradient(135deg, var(--primary-color) 0%, #1e40af 100%); border: none; padding: 0.75rem 1.5rem; border-radius: 0.5rem; font-weight: 500; transition: all 0.3s ease; }
    .btn-primary:hover { transform: translateY(-1px); box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
    .btn-success { background: linear-gradient(135deg, var(--success-color) 0%, #16a34a 100%); border: none; padding: 0.75rem 1.5rem; border-radius: 0.5rem; font-weight: 500; transition: all 0.3s ease; }
    .btn-success:hover { transform: translateY(-1px); box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
    .btn-danger { background: linear-gradient(135deg, var(--danger-color) 0%, #b91c1c 100%); border: none; padding: 0.75rem 1.5rem; border-radius: 0.5rem; font-weight: 500; transition: all 0.3s ease; }
    .btn-danger:hover { transform: translateY(-1px); box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
    .table { border-radius: 0.5rem; overflow: hidden; margin-bottom: 0; }
    .table thead th { background-color: var(--light-bg); border-bottom: 2px solid var(--border-color); padding: 1rem; font-weight: 600; color: var(--secondary-color); text-align: center; vertical-align: middle; white-space: nowrap; }
    .table tbody td { padding: 1rem; vertical-align: middle; text-align: center; }
</style>

<div class="portal-header mb-4">
    <div class="card card-outline card-primary mb-0">
        <div class="card-header d-flex align-items-center gap-2" style="background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%); color: white;">
            <i class="bi bi-journal-bookmark text-white fs-3 me-2"></i>
            <h4 class="mb-0 flex-grow-1">Catálogo Académico</h4>
            <span class="opacity-75">@DateTime.Now.ToString("dddd, dd 'de' MMMM 'de' yyyy")</span>
        </div>
    </div>
</div>

<div class="container-fluid">
    <ul class="nav nav-tabs" id="catalogTabs" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#grades"><i class="bi bi-mortarboard"></i> Grados</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#groups"><i class="bi bi-people"></i> Grupos</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#subjects"><i class="bi bi-book"></i> Materias</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#areas"><i class="bi bi-diagram-3"></i> Áreas</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#specialties"><i class="bi bi-award"></i> Especialidades</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#trimesters"><i class="bi bi-calendar3"></i> Trimestres</a></li>
    </ul>

    <div class="tab-content mt-3">
        <div class="tab-pane fade show active" id="grades">
            @await Html.PartialAsync("~/Views/Shared/Partials/_GradesPartial.cshtml", Model.GradesLevel)
        </div>
        <div class="tab-pane fade" id="groups">
            @await Html.PartialAsync("~/Views/Shared/Partials/_GroupsPartial.cshtml", Model.Groups)
        </div>
        <div class="tab-pane fade" id="subjects">
            @await Html.PartialAsync("~/Views/Shared/Partials/_SubjectsPartial.cshtml", Model.Subjects)
        </div>
        <div class="tab-pane fade" id="areas">
            @await Html.PartialAsync("~/Views/Shared/Partials/_AreasPartial.cshtml", Model.Areas)
        </div>
        <div class="tab-pane fade" id="specialties">
            @await Html.PartialAsync("~/Views/Shared/Partials/_SpecialtiesPartial.cshtml", Model.Specialties)
        </div>
        <div class="tab-pane fade" id="trimesters">
            <div class="card mb-4">
                <div class="card-header d-flex align-items-center gap-2">
                    <i class="bi bi-calendar3 text-primary fs-4"></i>
                    <h5 class="mb-0">Configuración del Año Escolar y Trimestres</h5>
                </div>
                <div class="card-body">
                    <form id="formTrimestres" autocomplete="off">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Trimestre 1 - Inicio</label>
                                <input type="date" class="form-control" id="inicio1T" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Trimestre 1 - Fin</label>
                                <input type="date" class="form-control" id="fin1T" required />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Trimestre 2 - Inicio</label>
                                <input type="date" class="form-control" id="inicio2T" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Trimestre 2 - Fin</label>
                                <input type="date" class="form-control" id="fin2T" required />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label">Trimestre 3 - Inicio</label>
                                <input type="date" class="form-control" id="inicio3T" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Trimestre 3 - Fin</label>
                                <input type="date" class="form-control" id="fin3T" required />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <button type="button" id="btnGuardarTrimestres" class="btn btn-success w-100">
                                    <i class="bi bi-save me-2"></i> Guardar configuración
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <table class="table table-bordered mt-3" id="tablaTrimestres">
                <thead>
                    <tr>
                        <th>Año Escolar</th>
                        <th>Trimestre</th>
                        <th>Fecha de Inicio</th>
                        <th>Fecha de Fin</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Trimestres != null && Model.Trimestres.Count > 0)
                    {
                        foreach (var t in Model.Trimestres)
                        {
                            <tr>
                                <td>@t.StartDate.Year</td>
                                <td>@t.Name</td>
                                <td class="fecha-inicio">@t.StartDate.ToString("dd/MM/yyyy")</td>
                                <td class="fecha-fin">@t.EndDate.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <button class="btn btn-sm btn-primary btnEditarTrimestre" data-id="@t.Id">Editar</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="5" class="text-center">No hay trimestres configurados.</td></tr>
                    }
                </tbody>
            </table>
            @if (Model.Trimestres != null && Model.Trimestres.Count > 0)
            {
                <div class="d-flex justify-content-end mt-3">
                    <button class="btn btn-danger" id="btnEliminarConfiguracion">
                        <i class="bi bi-trash"></i> Eliminar configuración de año escolar
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal para edición de fechas de trimestre -->
<div class="modal fade" id="modalEditarTrimestre" tabindex="-1" aria-labelledby="modalEditarTrimestreLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalEditarTrimestreLabel">Editar Fechas del Trimestre</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        <form id="formEditarTrimestre">
          <input type="hidden" id="editTrimestreId">
          <input type="hidden" id="editTrimestreAnio">
          <div class="mb-3">
            <label for="editStartDate" class="form-label">Fecha de Inicio</label>
            <input type="date" class="form-control" id="editStartDate" required>
          </div>
          <div class="mb-3">
            <label for="editEndDate" class="form-label">Fecha de Fin</label>
            <input type="date" class="form-control" id="editEndDate" required>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" id="btnGuardarEdicionTrimestre">Guardar Cambios</button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
                const target = $(e.target).attr('href');
                console.log("Se abrió la pestaña:", target);
            });

            // Ocultar formulario si ya hay trimestres
            if ($('#tablaTrimestres tbody tr').length > 0 && !$('#tablaTrimestres tbody tr td').hasClass('text-center')) {
                $('#formTrimestres').hide();
            } else {
                $('#formTrimestres').show();
            }

            // Edición con modal
            $(document).on('click', '.btnEditarTrimestre', function () {
                const fila = $(this).closest('tr');
                const id = $(this).data('id');
                const inicio = fila.find('.fecha-inicio').text();
                const fin = fila.find('.fecha-fin').text();
                const anio = fila.find('td').first().text();
                $('#editTrimestreId').val(id);
                $('#editTrimestreAnio').val(anio);
                $('#editStartDate').val(formatoISO(inicio));
                $('#editEndDate').val(formatoISO(fin));
                $('#modalEditarTrimestre').modal('show');
            });

            $('#btnGuardarEdicionTrimestre').on('click', function () {
                const id = $('#editTrimestreId').val();
                const startDate = $('#editStartDate').val();
                const endDate = $('#editEndDate').val();
                const anioOriginal = $('#editTrimestreAnio').val();
                if (!startDate || !endDate) {
                    Swal.fire('Error', 'Completa ambas fechas.', 'error');
                    return;
                }
                // Validar que el año no cambie
                if (startDate.split('-')[0] !== anioOriginal || endDate.split('-')[0] !== anioOriginal) {
                    Swal.fire('Error', 'Solo puedes cambiar el mes y día, no el año.', 'error');
                    return;
                }
                $.ajax({
                    url: '/AcademicCatalog/EditarTrimestre',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ id, startDate, endDate }),
                    success: function (resp) {
                        if (resp && resp.success) {
                            Swal.fire('¡Listo!', 'Fechas actualizadas.', 'success').then(() => location.reload());
                        } else {
                            Swal.fire('Error', resp && resp.message ? resp.message : 'No se pudo actualizar.', 'error');
                        }
                    },
                    error: function (xhr) {
                        let msg = 'No se pudo actualizar.';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            msg = xhr.responseJSON.message;
                        }
                        Swal.fire('Error', msg, 'error');
                    }
                });
            });

            // Eliminar toda la configuración de trimestres
            $('#btnEliminarConfiguracion').on('click', function () {
                Swal.fire({
                    title: '¿Eliminar configuración?',
                    text: '¿Seguro que deseas eliminar TODOS los trimestres?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/AcademicCatalog/EliminarTodosLosTrimestres',
                            method: 'POST',
                            success: function (resp) {
                                if (resp && resp.success) {
                                    Swal.fire('¡Listo!', 'Todos los trimestres han sido eliminados.', 'success').then(() => location.reload());
                                } else {
                                    Swal.fire('Error', resp && resp.message ? resp.message : 'No se pudo eliminar.', 'error');
                                }
                            }
                        });
                    }
                });
            });

            function formatoISO(fecha) {
                // Convierte dd/MM/yyyy a yyyy-MM-dd
                if (!fecha.includes('/')) return fecha;
                const partes = fecha.split('/');
                return `${partes[2]}-${partes[1].padStart(2, '0')}-${partes[0].padStart(2, '0')}`;
            }

            // Validación de duplicados al guardar
            $('#btnGuardarTrimestres').on('click', function () {
                // Tomar el año de la fecha de inicio del primer trimestre
                const anioNuevo = $('#inicio1T').val() ? $('#inicio1T').val().split('-')[0] : null;
                let existe = false;
                $('#tablaTrimestres tbody tr').each(function () {
                    const anioExistente = $(this).find('td').first().text();
                    if (anioExistente == anioNuevo) {
                        existe = true;
                    }
                });
                if (existe) {
                    Swal.fire('Error', 'Ya existe una configuración de trimestres para ese año escolar.', 'error');
                    return;
                }
                const trimestres = [
                    {
                        name: "1T",
                        startDate: $('#inicio1T').val(),
                        endDate: $('#fin1T').val()
                    },
                    {
                        name: "2T",
                        startDate: $('#inicio2T').val(),
                        endDate: $('#fin2T').val()
                    },
                    {
                        name: "3T",
                        startDate: $('#inicio3T').val(),
                        endDate: $('#fin3T').val()
                    }
                ];

                if (trimestres.some(t => !t.startDate || !t.endDate)) {
                    Swal.fire('Error', 'Completa todas las fechas de los trimestres.', 'error');
                    return;
                }

                $.ajax({
                    url: '/AcademicCatalog/GuardarTrimestres',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(trimestres),
                    success: function (resp) {
                        if (resp && resp.success) {
                            Swal.fire('¡Listo!', 'Trimestres guardados correctamente.', 'success');
                        } else {
                            Swal.fire('Error', resp && resp.message ? resp.message : 'No se pudo guardar la configuración.', 'error');
                        }
                    },
                    error: function (xhr) {
                        let msg = 'No se pudo guardar la configuración.';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            msg = xhr.responseJSON.message;
                        }
                        Swal.fire('Error', msg, 'error');
                    }
                });
            });

            // Si ya hay trimestres para el año, deshabilitar el botón de guardar y mostrar solo editar
            function verificarTrimestresPorAnio() {
                const filas = $('#tablaTrimestres tbody tr');
                if (filas.length > 0 && !filas.first().find('td').hasClass('text-center')) {
                    $('#btnGuardarTrimestres').prop('disabled', true);
                    $('#btnGuardarTrimestres').text('Solo se puede editar');
                } else {
                    $('#btnGuardarTrimestres').prop('disabled', false);
                    $('#btnGuardarTrimestres').text('Guardar configuración');
                }
            }
            verificarTrimestresPorAnio();
        });
    </script>

    @await Html.PartialAsync("~/Views/Shared/Partials/_GradesScripts.cshtml")
    @await Html.PartialAsync("~/Views/Shared/Partials/_GroupsScripts.cshtml")
    @await Html.PartialAsync("~/Views/Shared/Partials/_SubjectsScripts.cshtml")
    @await Html.PartialAsync("~/Views/Shared/Partials/_AreasScripts.cshtml")
    @await Html.PartialAsync("~/Views/Shared/Partials/_SpecialtiesScripts.cshtml")
}
