@model IEnumerable<SchoolManager.Models.User>
@{
    ViewData["Title"] = "Gestión de Usuarios";
    Layout = "_AdminLayout"; // Asegúrate que este sea tu layout correcto
}

<div class="container-fluid">
    <h3>Gestión de Usuarios del sistema escolar</h3>

    <div class="card card-primary card-outline">
        <div class="card-header">
            <h3 class="card-title"><i class="fas fa-user-plus"></i> Crear Nuevo Usuario</h3>
        </div>
        <div class="card-body">
            <form id="userForm">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Nombre Completo</label>
                            <input type="text" class="form-control" name="Name" placeholder="Nombre y apellidos" required>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Correo Electrónico</label>
                            <input type="email" class="form-control" name="Email" placeholder="correo@ejemplo.com" required>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Rol</label>
                            <select class="form-control" name="Role" id="roleSelect">
                                @foreach (var role in ViewBag.Roles)
                                {
                                    <option value="@role">@role</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Estado</label>
                            <select class="form-control" name="Status">
                                <option value="active">Activo</option>
                                <option value="inactive">Inactivo</option>
                            </select>
                        </div>
                    </div>

                    <!-- Campos que se muestran solo para Teacher -->
                    <div class="col-md-6" id="teacherFields">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Materias</label>
                                    <select multiple class="form-control" name="Subjects">
                                        @foreach (var subject in ViewBag.Subjects as List<SchoolManager.Models.Subject>)
                                        {
                                            <option value="@subject.Id">@subject.Name</option>
                                        }
                                    </select>
                                    <div id="newSubjectsContainer" class="mt-2"></div>
                                    <button type="button" class="btn btn-sm btn-secondary mt-1" data-bs-toggle="modal" data-bs-target="#subjectModal">
                                        Gestionar Materias
                                    </button>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Grupos</label>
                                    <select multiple class="form-control" name="Groups">
                                        @foreach (var group in ViewBag.Groups as List<SchoolManager.Models.Group>)
                                        {
                                            <option value="@group.Id">@group.Name</option>
                                        }
                                    </select>
                                    <div id="newGroupsContainer" class="mt-2"></div>
                                    <button type="button" class="btn btn-sm btn-secondary mt-1" data-bs-toggle="modal" data-bs-target="#groupModal">
                                        Gestionar Grupos
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Fin Teacher Fields -->
                </div>

                <button type="button" id="btnCreateUser" class="btn btn-primary">
                    <i class="fas fa-user-plus"></i> Crear Usuario
                </button>
            </form>
        </div>
    </div>

    <!-- Tabla de usuarios -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title"><i class="fas fa-users"></i> Gestión de Usuarios</h3>
        </div>
        <div class="card-body">
            <div class="input-group mb-3">
                <input type="text" id="searchInput" class="form-control" placeholder="Buscar usuario por nombre o correo">
                <div class="input-group-append">
                    <button class="btn btn-primary"><i class="fas fa-search"></i></button>
                </div>
            </div>
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Correo</th>
                        <th>Rol</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="userTable">
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>@user.Role</td>
                            <td>
                                @if (user.Status == "active")
                                {
                                    <span class="badge bg-success">Activo</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Inactivo</span>
                                }
                            </td>
                            <td>
                                <a class="btn btn-info btn-sm" href="@Url.Action("Edit", new { id = user.Id })">
                                    <i class="fas fa-edit"></i> Editar
                                </a>
                                <a class="btn btn-danger btn-sm" href="@Url.Action("Delete", new { id = user.Id })">
                                    <i class="fas fa-trash"></i> Eliminar
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Shared/Partials/_SubjectsPartial.cshtml")
@await Html.PartialAsync("~/Views/Shared/Partials/_GroupsPartial.cshtml")

@section Scripts {
    <script>
        $(document).ready(function () {
            // Búsqueda dinámica en tabla de usuarios
            $('#searchInput').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $("#userTable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Capturar datos al hacer clic en "Crear Usuario"
            $('#btnCreateUser').on('click', function () {
                const form = $('#userForm');
                const user = {
                    Name: form.find('[name="Name"]').val().trim(),
                    Email: form.find('[name="Email"]').val().trim(),
                    Role: form.find('[name="Role"]').val(),
                    Status: form.find('[name="Status"]').val(),
                    Subjects: form.find('[name="Subjects"]').val() || [],
                    Groups: form.find('[name="Groups"]').val() || []
                };

                console.log('Usuario a crear:', user);

                // Enviar datos al servidor
                $.ajax({
                    url: '/User/CreateJson',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(user)
                })
                .done(function (response) {
                    alert(response.message || 'Usuario creado exitosamente');
                    location.reload();
                })
                .fail(function (xhr) {
                    console.error(xhr);
                    alert('Error al crear el usuario');
                });
            });

            // Mostrar u ocultar campos de teacher
            function toggleTeacherFields() {
                let selectedRole = $('#roleSelect').val();
                if (selectedRole === 'Teacher') {
                    $('#teacherFields').show();
                } else {
                    $('#teacherFields').hide();
                }
            }

            // Ejecutar al cargar
            toggleTeacherFields();

            // Escuchar cambio de rol
            $('#roleSelect').on('change', toggleTeacherFields);
        });
    </script>
}
