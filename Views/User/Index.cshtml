@model IEnumerable<SchoolManager.Models.User>
@{
    ViewData["Title"] = "Gestión de Usuarios";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <h3>Gestión de Usuarios del sistema escolar</h3>

    <div class="card card-primary card-outline">
        <div class="card-header">
            <h3 class="card-title"><i class="fas fa-user-plus"></i> Crear / Editar Usuario</h3>
        </div>
        <div class="card-body">
            <form id="userForm">
                <!-- Campo oculto para saber si es edición -->
                <input type="hidden" name="UserId" id="UserId" />

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Nombre Completo</label>
                            <input type="text" class="form-control" name="Name" placeholder="Nombre y apellidos" required>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Correo Electrónico</label>
                            <input type="email" class="form-control" name="Email" placeholder="correo@ejemplo.com" required>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Rol</label>
                            <select class="form-control" name="Role" id="roleSelect">
                                @foreach (var role in ViewBag.Roles)
                                {
                                    <option value="@role">@role</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Estado</label>
                            <select class="form-control" name="Status">
                                <option value="active">Activo</option>
                                <option value="inactive">Inactivo</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-md-6" id="teacherFields">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Materias</label>
                                    <select multiple class="form-control" name="Subjects">
                                        @foreach (var subject in ViewBag.Subjects as List<SchoolManager.Models.Subject>)
                                        {
                                            <option value="@subject.Id">@subject.Name</option>
                                        }
                                    </select>
                                    <div id="newSubjectsContainer" class="mt-2"></div>
                                    <button type="button" class="btn btn-sm btn-secondary mt-1" data-bs-toggle="modal" data-bs-target="#subjectModal">
                                        Gestionar Materias
                                    </button>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Grupos</label>
                                    <select multiple class="form-control" name="Groups">
                                        @foreach (var group in ViewBag.Groups as List<SchoolManager.Models.Group>)
                                        {
                                            <option value="@group.Id">@group.Name</option>
                                        }
                                    </select>
                                    <div id="newGroupsContainer" class="mt-2"></div>
                                    <button type="button" class="btn btn-sm btn-secondary mt-1" data-bs-toggle="modal" data-bs-target="#groupModal">
                                        Gestionar Grupos
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <button type="button" id="btnCreateUser" class="btn btn-primary">
                    <i class="fas fa-user-plus"></i> Crear Usuario
                </button>

                <button type="button" id="btnUpdateUser" class="btn btn-warning" disabled>
                    <i class="fas fa-save"></i> Actualizar Usuario
                </button>
            </form>
        </div>
    </div>

    <!-- Tabla de usuarios -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title"><i class="fas fa-users"></i> Gestión de Usuarios</h3>
        </div>
        <div class="card-body">
            <div class="input-group mb-3">
                <input type="text" id="searchInput" class="form-control" placeholder="Buscar usuario por nombre o correo">
                <div class="input-group-append">
                    <button class="btn btn-primary"><i class="fas fa-search"></i></button>
                </div>
            </div>
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Correo</th>
                        <th>Rol</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="userTable">
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>@user.Role</td>
                            <td>
                                @if (user.Status == "active")
                                {
                                    <span class="badge bg-success">Activo</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Inactivo</span>
                                }
                            </td>
                            <td>
                                <button type="button" class="btn btn-info btn-sm btn-edit-user" data-id="@user.Id">
                                    <i class="fas fa-edit"></i> Editar
                                </button>
                                <button type="button" class="btn btn-danger btn-sm btn-delete-user" data-id="@user.Id">
                                    <i class="fas fa-trash"></i> Eliminar
                                </button>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Shared/Partials/_SubjectsPartial.cshtml")
@await Html.PartialAsync("~/Views/Shared/Partials/_GroupsPartial.cshtml")

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#searchInput').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $("#userTable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            function toggleTeacherFields() {
                let selectedRole = $('#roleSelect').val();
                if (selectedRole === 'Teacher') {
                    $('#teacherFields').show();
                } else {
                    $('#teacherFields').hide();
                }
            }

            $('#roleSelect').on('change', toggleTeacherFields);
            toggleTeacherFields();

            // Crear usuario
            $('#btnCreateUser').on('click', function () {
                const form = $('#userForm');

                const user = {
                    Name: form.find('[name="Name"]').val().trim(),
                    Email: form.find('[name="Email"]').val().trim(),
                    Role: form.find('[name="Role"]').val(),
                    Status: form.find('[name="Status"]').val(),
                    Subjects: form.find('[name="Subjects"]').val() || [],
                    Groups: form.find('[name="Groups"]').val() || []
                };

                $.ajax({
                    url: '/User/CreateJson',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(user)
                })
                .done(function (response) {
                    alert(response.message || 'Usuario creado exitosamente');
                    resetUserForm();
                    location.reload();
                })
                .fail(function (xhr) {
                    console.error(xhr);
                    alert('Error al crear el usuario');
                });
            });

            // Actualizar usuario
            $('#btnUpdateUser').on('click', function () {
                const form = $('#userForm');

                const user = {
                    Id: $('#UserId').val(),
                    Name: form.find('[name="Name"]').val().trim(),
                    Email: form.find('[name="Email"]').val().trim(),
                    Role: form.find('[name="Role"]').val(),
                    Status: form.find('[name="Status"]').val(),
                    Subjects: form.find('[name="Subjects"]').val() || [],
                    Groups: form.find('[name="Groups"]').val() || []
                };

                $.ajax({
                    url: '/User/UpdateJson',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(user)
                })
                .done(function (response) {
                    alert(response.message || 'Usuario actualizado correctamente');
                    resetUserForm();
                    location.reload();
                })
                .fail(function (xhr) {
                    console.error(xhr);
                    alert('Error al actualizar el usuario');
                });
            });

            // Editar usuario (cargar en formulario)
            $('.btn-edit-user').on('click', function () {
                const userId = $(this).data('id');

                $.get(`/User/GetUserJson?id=${userId}`, function (user) {
                    $('#UserId').val(user.id);
                    $('[name="Name"]').val(user.name);
                    $('[name="Email"]').val(user.email);
                    $('[name="Role"]').val(user.role);
                    $('[name="Status"]').val(user.status);
                    $('[name="Subjects"]').val(user.subjects);
                    $('[name="Groups"]').val(user.groups);

                    toggleTeacherFields();

                    $('#btnUpdateUser').prop('disabled', false);
                    $('#btnCreateUser').prop('disabled', true);
                });
            });

            // Reset
            function resetUserForm() {
                const form = $('#userForm');

                form[0].reset();
                $('#UserId').val('');
                $('#btnUpdateUser').prop('disabled', true);
                $('#btnCreateUser').prop('disabled', false);
                toggleTeacherFields();
            }
        });

                // Eliminar usuario
        $('.btn-delete-user').on('click', function () {
            const userId = $(this).data('id');

            if (!confirm('¿Estás seguro de que deseas eliminar este usuario?')) return;

            $.ajax({
                url: `/User/DeleteConfirmed/${userId}`,
                type: 'POST'
            })
            .done(function () {
                alert('Usuario eliminado correctamente');
                location.reload(); // O puedes eliminar la fila directamente si quieres
            })
            .fail(function (xhr) {
                console.error(xhr);
                alert('Error al eliminar el usuario');
            });
        });

    </script>
}
